# Enhanced Combine Data Processor Examples
# Demonstrates desktop publishing workflows, enhanced column handling, and header retention

basic_enhanced_example:
  description: "Basic combination with enhanced column handling"
  yaml: |
    # Enhanced column handling for different data structures
    
    - # OPT - Step description
      step_description: "Combine title and data sections"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Combination method
      combine_type: "vertical_stack"
      # REQ - Column handling policy (NEW REQUIRED PARAMETER)
      column_handling: "allow_mismatched_columns"
      # REQ - Data sources to combine
      data_sources:
        - insert_from_stage: "Title Section"    # Has columns [0,1,2]
        - insert_blank_rows: 1
        - insert_from_stage: "Data Section"     # Has columns ['Product','Sales','Region']
      # OPT - Save combined result
      save_to_stage: "Complete Report"

desktop_publishing_example:
  description: "Complete desktop publishing workflow preserving document structure"
  yaml: |
    # Real-world document assembly like Excel/Word publishing
    
    - # OPT - Step description
      step_description: "Assemble quarterly sales report"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Stack sections vertically
      combine_type: "vertical_stack"
      # REQ - Allow different column structures
      column_handling: "allow_mismatched_columns"
      # REQ - Sequential document sections
      data_sources:
        # Report title section
        - insert_from_stage: "Report Title"
          retain_column_names: true           # Preserve title structure
        - insert_blank_rows: 2                # Visual spacing
        # Column headers section  
        - insert_from_stage: "Column Headers"
          retain_column_names: false          # Headers become data
        # Main data section
        - insert_from_stage: "Sales Data"
          retain_column_names: false          # Pure data
        - insert_blank_rows: 1                # Space before footer
        # Report footer
        - insert_from_stage: "Report Footer"
          retain_column_names: true           # Preserve footer notes
      # OPT - Save complete document
      save_to_stage: "Final Report"

smart_defaults_example:
  description: "Demonstrate smart defaults based on column policy"
  yaml: |
    # Smart defaults automatically set retain_column_names based on column_handling
    
    - # OPT - Step description
      step_description: "Combine with smart column defaults"
      # REQ - Processor type  
      processor_type: "combine_data"
      # REQ - Vertical combination
      combine_type: "vertical_stack"
      # REQ - Allow mismatched columns triggers smart defaults
      column_handling: "allow_mismatched_columns"
      # REQ - Data sources (retain_column_names auto-set to true)
      data_sources:
        - insert_from_stage: "Title Section"     # retain_column_names=true (auto)
        - insert_blank_rows: 1
        - insert_from_stage: "Metadata"          # retain_column_names=true (auto)
        - insert_blank_rows: 1  
        - insert_from_stage: "Product Data"      # retain_column_names=true (auto)

explicit_header_control_example:
  description: "Explicit control over header retention per data source"
  yaml: |
    # Override smart defaults with explicit settings
    
    - # OPT - Step description
      step_description: "Combine with explicit header control"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Vertical stacking
      combine_type: "vertical_stack"
      # REQ - Require matching columns
      column_handling: "require_matching_columns"
      # REQ - Data sources with explicit control
      data_sources:
        # Headers retained despite require_matching_columns policy
        - insert_from_stage: "Section A"
          retain_column_names: true           # Explicit override
        - insert_blank_rows: 1
        # No headers despite require_matching_columns policy  
        - insert_from_stage: "Section B"
          retain_column_names: false          # Explicit setting
        - insert_blank_rows: 1
        # Default behavior (false for require_matching_columns)
        - insert_from_stage: "Section C"     # retain_column_names=false (auto)

horizontal_comparison_example:
  description: "Side-by-side data comparison with header retention"
  yaml: |
    # Horizontal layout for comparative analysis
    
    - # OPT - Step description
      step_description: "Create side-by-side comparison"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Horizontal concatenation
      combine_type: "horizontal_concat"
      # REQ - Allow different column names
      column_handling: "allow_mismatched_columns"
      # REQ - Side-by-side data sources
      data_sources:
        - insert_from_stage: "Q3 2024 Data"
          retain_column_names: true           # Column headers as first row
        - insert_blank_cols: 2                # Visual separator
        - insert_from_stage: "Q3 2023 Data"  
          retain_column_names: true           # Column headers as first row
      # OPT - Save comparison report
      save_to_stage: "YoY Comparison"

strict_column_matching_example:
  description: "Strict column validation for consistent data structures"
  yaml: |
    # Enforce identical column structures across sources
    
    - # OPT - Step description
      step_description: "Combine datasets with strict validation"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Vertical stacking
      combine_type: "vertical_stack"
      # REQ - Require identical columns
      column_handling: "require_matching_columns"
      # REQ - Data sources (must have identical columns)
      data_sources:
        - insert_from_stage: "Q1 Sales"        # Columns: Product, Sales, Region
        - insert_blank_rows: 1
        - insert_from_stage: "Q2 Sales"        # Must match: Product, Sales, Region
        - insert_blank_rows: 1  
        - insert_from_stage: "Q3 Sales"        # Must match: Product, Sales, Region
      # OPT - Save consolidated data
      save_to_stage: "Quarterly Summary"

mixed_policy_workflow_example:
  description: "Multi-step workflow mixing different column policies"
  yaml: |
    # Combine different workflow phases with appropriate policies
    
    # Step 1: Combine structured data with strict validation
    - step_description: "Consolidate quarterly data"
      processor_type: "combine_data"
      combine_type: "vertical_stack"
      column_handling: "require_matching_columns"     # Strict for data consistency
      data_sources:
        - insert_from_stage: "Q1 Results"
        - insert_from_stage: "Q2 Results" 
        - insert_from_stage: "Q3 Results"
      save_to_stage: "Consolidated Data"
    
    # Step 2: Add report formatting with flexible column handling
    - step_description: "Add report headers and formatting"
      processor_type: "combine_data"
      combine_type: "vertical_stack"
      column_handling: "allow_mismatched_columns"     # Flexible for document assembly
      data_sources:
        - insert_from_stage: "Report Header"
          retain_column_names: true                   # Preserve header formatting
        - insert_blank_rows: 2
        - insert_from_stage: "Consolidated Data"
          retain_column_names: false                  # Data only, no extra headers
        - insert_blank_rows: 1
        - insert_from_stage: "Report Footer"
          retain_column_names: true                   # Preserve footer formatting
      save_to_stage: "Final Report"

current_data_integration_example:
  description: "Combine saved stages with current pipeline data using enhanced features"
  yaml: |
    # Mix stage data with current processing results
    
    - # OPT - Step description
      step_description: "Combine metadata with current analysis"
      # REQ - Processor type
      processor_type: "combine_data"
      # REQ - Vertical stacking
      combine_type: "vertical_stack"
      # REQ - Allow different structures
      column_handling: "allow_mismatched_columns"
      # REQ - Mix of stage and current data
      data_sources:
        # Metadata from saved stage
        - insert_from_stage: "Analysis Metadata"
          retain_column_names: true             # Preserve metadata structure
        - insert_blank_rows: 1
        # Current pipeline results
        - insert_from_stage: current_dataframe
          retain_column_names: false            # Current data without extra headers
        - insert_blank_rows: 1
        # Summary from another stage
        - insert_from_stage: "Summary Stats"
          retain_column_names: true             # Preserve summary formatting

complex_document_assembly_example:
  description: "Enterprise-level document assembly with multiple formatting requirements"
  yaml: |
    # Complete workflow for complex business reports
    
    # Step 1: Prepare document header with company branding
    - step_description: "Create document header section"
      processor_type: "combine_data"
      combine_type: "vertical_stack"
      column_handling: "allow_mismatched_columns"
      data_sources:
        - insert_from_stage: "Company Logo"
          retain_column_names: true
        - insert_from_stage: "Report Title"
          retain_column_names: true
        - insert_from_stage: "Executive Summary"
          retain_column_names: true
      save_to_stage: "Document Header"
    
    # Step 2: Assemble main content with data sections
    - step_description: "Combine analytical sections"
      processor_type: "combine_data"
      combine_type: "vertical_stack"
      column_handling: "allow_mismatched_columns"
      data_sources:
        - insert_from_stage: "Document Header"
          retain_column_names: false            # Already formatted
        - insert_blank_rows: 3                  # Major section break
        - insert_from_stage: "Performance Metrics"
          retain_column_names: true             # Section with headers
        - insert_blank_rows: 2
        - insert_from_stage: "Financial Data"
          retain_column_names: true             # Data table with headers
        - insert_blank_rows: 2
        - insert_from_stage: "Trend Analysis"
          retain_column_names: true             # Analysis with headers
        - insert_blank_rows: 3                  # Before footer
        - insert_from_stage: "Legal Disclaimers"
          retain_column_names: true             # Footer section
      save_to_stage: "Complete Business Report"

# Configuration Reference for Enhanced Features

configuration_reference:
  required_parameters:
    combine_type:
      type: string
      required: true
      options: ["vertical_stack", "horizontal_concat"]
      description: "Method for combining DataFrames"
    
    column_handling:
      type: string
      required: true
      options: ["require_matching_columns", "allow_mismatched_columns"]
      description: "Global policy for handling column structure differences"
      behavior:
        require_matching_columns: "All DataFrames must have identical columns"
        allow_mismatched_columns: "Allow different columns, missing filled with NaN"
    
    data_sources:
      type: list
      required: true
      description: "Sequential list of data sources and formatting operations"
      min_items: 1

  optional_parameters:
    retain_column_names:
      type: boolean
      required: false
      scope: "per data source"
      description: "Insert column headers as first data row before actual data"
      smart_defaults:
        require_matching_columns: false
        allow_mismatched_columns: true
      override: "Explicit setting overrides smart default"

  data_source_operations:
    insert_from_stage:
      format: "{'insert_from_stage': 'stage_name'}"
      description: "Load data from saved stage or current_dataframe"
      special_values:
        current_dataframe: "References data flowing through pipeline"
      enhanced_options:
        retain_column_names: "Control header retention for this source"
    
    insert_blank_rows:
      format: "{'insert_blank_rows': N}"
      description: "Insert N blank rows for visual spacing"
      applies_to: "vertical_stack only"
      validation: "Must be non-negative integer"
    
    insert_blank_cols:
      format: "{'insert_blank_cols': N}"
      description: "Insert N blank columns for visual separation"
      applies_to: "horizontal_concat only"
      validation: "Must be non-negative integer"

  enhanced_features:
    desktop_publishing:
      description: "Combine title sections, headers, and data preserving visual meaning"
      use_case: "Excel document assembly, report generation"
      recommended_policy: "allow_mismatched_columns"
    
    smart_defaults:
      description: "Automatically set retain_column_names based on column_handling policy"
      logic:
        require_matching_columns: "retain_column_names defaults to false (let pandas handle)"
        allow_mismatched_columns: "retain_column_names defaults to true (preserve meaning)"
      override: "Explicit retain_column_names setting always takes precedence"
    
    header_retention:
      description: "Insert DataFrame column names as first data row"
      purpose: "Preserve column meaning when combining different structures"
      result: "Headers become visible data in final output"

  migration_notes:
    from_legacy:
      ignore_column_mismatch: "Replace with column_handling: 'allow_mismatched_columns'"
      default_behavior: "Add required column_handling parameter to existing configurations"
    
    backward_compatibility:
      breaking_changes: "column_handling is now required parameter"
      new_features: "retain_column_names and smart defaults are additive"
