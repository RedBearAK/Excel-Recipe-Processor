# Revision date: 2025-07-30

description: "Import data from external files with stage-based data management and variable substitution"

basic_example:
  description: "Simple file import saving to a stage"
  yaml: |
    # Complete recipe with import_file processor
    
    settings:
      stages:
        - stage_name: "customer_data"
          description: "Imported customer data from Excel"
          protected: false
    
    recipe:
      - # OPT - Step description
        step_description: "Import customer data from Excel"
        # REQ - Processor type
        processor_type: "import_file"
        # REQ - File path (supports variable substitution)
        input_file: "customer_data.xlsx"
        # REQ - Stage to save imported data
        save_to_stage: "customer_data"

excel_sheet_example:
  description: "Import specific sheet from multi-sheet Excel file"
  yaml: |
    # Import specific sheet from Excel workbook
    
    settings:
      stages:
        - stage_name: "q4_sales"
          description: "Q4 sales data from specific sheet"
          protected: false
    
    recipe:
      - # OPT - Step description
        step_description: "Import quarterly sales from specific sheet"
        # REQ - Processor type
        processor_type: "import_file"
        # REQ - Excel file path
        input_file: "reports/quarterly_sales.xlsx"
        # REQ - Stage to save imported data
        save_to_stage: "q4_sales"
        # OPT - Sheet name or index to import
        # Can be sheet name (string) or sheet index (integer, 0-based)
        # Default value: 0 (first sheet)
        sheet: "Q4 Sales Data"

csv_import_example:
  description: "Import CSV file with custom encoding and separator"
  yaml: |
    # Import CSV file with custom formatting options
    
    settings:
      stages:
        - stage_name: "system_data"
          description: "System data imported from CSV"
          protected: false
    
    recipe:
      - # OPT - Step description
        step_description: "Import CSV data with custom separator"
        # REQ - Processor type
        processor_type: "import_file"
        # REQ - CSV file path
        input_file: "exports/system_data.csv"
        # REQ - Stage to save imported data
        save_to_stage: "system_data"
        # OPT - Text encoding for CSV/TSV files (ignored for Excel files)
        # Valid examples: "utf-8", "latin1", "cp1252", "ascii"
        # Default value: "utf-8"
        encoding: "utf-8"
        # OPT - Column separator for CSV files
        # Valid examples: ",", ";", "|", "\t"
        # Default value: ","
        separator: ";"

variable_substitution_example:
  description: "Import with dynamic file paths using variables"
  yaml: |
    # Import file with variable substitution in path
    
    settings:
      variables:
        department: "sales"
      stages:
        - stage_name: "daily_data"
          description: "Daily data imported with variables"
          protected: false
    
    recipe:
      - # OPT - Step description
        step_description: "Import daily data using date variables"
        # REQ - Processor type
        processor_type: "import_file"
        # REQ - File path with variable substitution
        # Built-in date variables: {date}, {timestamp}, {YYYY}, {MM}, {DD}, {YY}, {MMDD}
        # Custom variables: {department}, {batch_id} - defined in recipe settings or CLI
        # Variable examples: department="sales", batch_id="B001"
        input_file: "daily_data/{department}_{YYYY}{MM}{DD}.xlsx"
        # REQ - Stage to save imported data
        save_to_stage: "daily_data"
        # OPT - Import specific sheet by index
        sheet: 0

multi_import_workflow_example:
  description: "Complete workflow importing multiple files to different stages"
  yaml: |
    # Import multiple files saving each to different stages for complex processing
    
    settings:
      variables:
        processing_date: "20250729"
      stages:
        - stage_name: "customer_master"
          description: "Master customer data"
          protected: false
        - stage_name: "product_catalog"
          description: "Current product catalog"
          protected: false
        - stage_name: "orders_data"
          description: "Daily orders for processing"
          protected: false
    
    recipe:
      # Import customer master data
      - step_description: "Import customer master data"
        processor_type: "import_file"
        input_file: "master/customers.xlsx"
        save_to_stage: "customer_master"
        
      # Import product catalog
      - step_description: "Import product catalog"
        processor_type: "import_file"
        input_file: "master/products.xlsx"
        save_to_stage: "product_catalog"
        
      # Import daily orders with variable substitution
      - step_description: "Import daily orders"
        processor_type: "import_file"
        input_file: "daily/orders_{processing_date}.xlsx"
        save_to_stage: "orders_data"

parameter_details:
  input_file:
    type: string
    required: true
    description: "Path to input file (Excel, CSV, or TSV)"
    supports_variables: true
    examples:
      - "data/customers.xlsx"
      - "exports/daily_sales_{date}.csv"
      - "batch_{batch_id}/orders.xlsx"

  save_to_stage:
    type: string
    required: true
    description: "Stage name to save imported data (must be declared in settings.stages)"
    examples:
      - "customer_data"
      - "Raw Import Data"
      - "Daily Sales {date}"

  sheet:
    type: "string or integer"
    required: false
    default: 0
    description: "Sheet name or index to import from Excel files"
    examples:
      - 0  # First sheet
      - 1  # Second sheet
      - "Data"  # Sheet by name
      - "Q4 Sales"  # Sheet with spaces

  encoding:
    type: string
    required: false
    default: "utf-8"
    description: "Text encoding for CSV/TSV files (ignored for Excel files)"
    common_values: ["utf-8", "latin1", "cp1252", "ascii"]

  separator:
    type: string
    required: false
    default: ","
    description: "Column separator for CSV files"
    common_values: [",", ";", "|", "\\t"]

  format:
    type: string
    required: false
    description: "Explicit format override (usually auto-detected from extension)"
    options: ["excel", "csv", "tsv"]
    auto_detection: "Based on file extension: .xlsx/.xls = excel, .csv = csv, .tsv/.txt = tsv"

integration_notes:
  stage_manager: "All imported data must be saved to declared stages in the new architecture"
  file_reader: "Uses FileReader infrastructure for consistent file handling across formats"
  variable_substitution: "Supports built-in date/time variables and custom variables from recipe settings"
  pipeline_flow: "Part of stage-based architecture - data flows between stages, not through pipeline"
  format_detection: "Automatically detects file format from extension unless explicitly overridden"

stage_architecture_notes:
  required_declarations: "All stages used in save_to_stage must be declared in settings.stages"
  stage_isolation: "Each import creates an independent stage - no automatic pipeline data replacement"
  memory_management: "Each stage stores complete DataFrame copy - consider memory usage for large files"
  workflow_design: "Plan stage names and flow before implementing complex multi-import workflows"

common_use_cases:
  single_import: "Import one file to start processing workflow"
  multi_source_import: "Import reference data (customers, products) and transaction data separately"
  dynamic_imports: "Import files with variable paths based on dates or batch parameters"
  format_conversion: "Import CSV/TSV data for processing in Excel-like operations"
  staging_workflow: "Import multiple files to stages for later lookup/merge operations"
