# Enhanced Format Excel Examples - Phase 3: Cell Range Targeting & Advanced Colors
# excel_recipe_processor/processors/_examples/format_excel_examples.yaml
#
# Phase 3 adds cell range targeting, webcolors integration, and border formatting
# Revision date: 2025-08-08

description: >
  Format existing Excel files with professional presentation features. 
  Phase 3 adds cell range targeting, comprehensive color format support, 
  and border formatting.

basic_cell_range_example:
  description: "Target specific cell ranges with custom formatting"
  yaml: |
    settings:
      description: "Create a professional report with targeted cell formatting"
      stages:
        - stage_name: "report_data"
          description: "Business report data"
          protected: false

    recipe:
      - step_description: "Import and export report data"
        processor_type: "import_file"
        input_file: "data/business_report.xlsx"
        save_to_stage: "report_data"

      - step_description: "Export to Excel"
        processor_type: "export_file"
        source_stage: "report_data"
        output_file: "reports/targeted_report.xlsx"

      - # Phase 3 Enhancement: Cell range targeting
        step_description: "Apply targeted formatting to specific ranges"
        processor_type: "format_excel"
        target_file: "reports/targeted_report.xlsx"
        formatting:
          # Phase 1: Header formatting
          header_text_color: "white"           # CSS color name!
          header_font_size: 14
          header_bold: true
          header_background: true
          header_background_color: "navy"      # CSS color name!

          # Phase 2: General formatting
          general_text_color: "rgb(51, 51, 51)"  # RGB format!
          general_font_size: 11
          general_alignment_horizontal: "left"

          # Phase 3: Cell range targeting
          cell_ranges:
            "A1:E1":                          # Header row
              background_color: "darkblue"    # CSS color name
              text_color: "white"
              bold: true
              font_size: 14
            
            "A2:A10":                         # First column - labels
              text_color: "darkslategray"     # CSS color name
              bold: true
              alignment_horizontal: "right"
            
            "B2:E10":                         # Data area
              text_color: "#333333"           # Hex format
              alignment_horizontal: "center"
              border: "thin"                  # Simple border
            
            "F2:F10":                         # Summary column
              background_color: "lightgray"
              text_color: "black"
              border:
                all: "thick"                  # Thick border all around

          auto_fit_columns: true
          freeze_top_row: true

webcolors_showcase_example:
  description: "Demonstrate all supported color formats with webcolors"
  yaml: |
    settings:
      description: "Show comprehensive color format support"

    recipe:
      - step_description: "Showcase all color format options"
        processor_type: "format_excel"
        target_file: "reports/color_showcase.xlsx"
        formatting:
          # CSS Color Names (webcolors integration)
          header_text_color: "white"
          header_background_color: "steelblue"
          general_text_color: "darkslategray"

          cell_ranges:
            "A1:A5":                          # CSS color names
              text_color: "red"               # Basic CSS colors
            "B1:B5":
              text_color: "forestgreen"       # Extended CSS colors
            "C1:C5":
              text_color: "mediumorchid"      # Complex CSS colors
            
            "A6:A10":                         # RGB format
              text_color: "rgb(255, 0, 0)"    # Red in RGB
            "B6:B10":
              text_color: "rgb(0, 128, 0)"    # Green in RGB
            "C6:C10":
              text_color: "rgb(0, 0, 255)"    # Blue in RGB
            
            "A11:A15":                        # Hex formats
              text_color: "#FF0000"           # Hex with hash
            "B11:B15":
              text_color: "00FF00"            # Hex without hash
            "C11:C15":
              text_color: "#00F"              # Short hex format

advanced_border_example:
  description: "Professional report with sophisticated border formatting"
  yaml: |
    settings:
      description: "Create professional reports with custom borders"

    recipe:
      - step_description: "Apply advanced border formatting"
        processor_type: "format_excel"
        target_file: "reports/bordered_report.xlsx"
        formatting:
          # Professional header
          header_text_color: "white"
          header_font_size: 16
          header_bold: true
          header_background_color: "darkblue"

          # Clean general formatting
          general_font_size: 10
          general_alignment_horizontal: "left"
          general_alignment_vertical: "center"

          cell_ranges:
            "A1:F1":                          # Header row with thick border
              border:
                all: "thick"
                
            "A2:F20":                         # Data area with thin borders
              border: "thin"
              
            "A21:F21":                        # Summary row with special borders
              background_color: "lightsteelblue"
              text_color: "darkblue"
              bold: true
              border:
                top: "thick"
                bottom: "thick"
                left: "thin"
                right: "thin"
            
            "G2:G21":                         # Side column with custom border
              background_color: "aliceblue"
              border:
                left: 
                  style: "thick"
                  color: "steelblue"

          auto_fit_columns: true
          freeze_top_row: true

conditional_range_formatting_example:
  description: "Format different data types with appropriate styling"
  yaml: |
    settings:
      description: "Apply different formatting based on data content areas"

    recipe:
      - step_description: "Format mixed content report with range targeting"
        processor_type: "format_excel"
        target_file: "reports/mixed_content.xlsx"
        formatting:
          # Professional header
          header_text_color: "white"
          header_font_size: 14
          header_bold: true
          header_background_color: "midnightblue"

          # Default formatting
          general_font_size: 10
          general_text_color: "black"

          cell_ranges:
            "A2:A50":                         # Row labels
              text_color: "darkslategray"
              bold: true
              alignment_horizontal: "right"
              background_color: "whitesmoke"
            
            "B2:D50":                         # Text data
              text_color: "black"
              alignment_horizontal: "left"
              border: "hair"                  # Light border
            
            "E2:G50":                         # Numeric data
              text_color: "darkgreen"
              alignment_horizontal: "right"
              border: "thin"
              font_name: "Consolas"           # Monospace for numbers
            
            "H2:H50":                         # Status indicators
              text_color: "white"
              alignment_horizontal: "center"
              bold: true
              background_color: "orange"      # Will be conditionally colored
              border: "medium"
            
            "A51:H51":                        # Totals row
              background_color: "navy"
              text_color: "white"
              bold: true
              font_size: 12
              alignment_horizontal: "center"
              border:
                top: "thick"
                bottom: "thick"

dashboard_style_example:
  description: "Create a dashboard-style report with visual sections"
  yaml: |
    settings:
      description: "Professional dashboard with clear visual sections"

    recipe:
      - step_description: "Create dashboard-style formatting"
        processor_type: "format_excel"
        target_file: "reports/dashboard.xlsx"
        formatting:
          # Dashboard header
          header_text_color: "white"
          header_font_size: 18
          header_bold: true
          header_background_color: "darkslateblue"

          # Clean background
          general_font_size: 10
          general_text_color: "dimgray"

          cell_ranges:
            # Section 1: KPI Headers
            "A3:D3":
              background_color: "royalblue"
              text_color: "white"
              bold: true
              font_size: 12
              alignment_horizontal: "center"
              border: "thick"
            
            # Section 1: KPI Values
            "A4:D8":
              background_color: "lightsteelblue"
              text_color: "darkblue"
              font_size: 14
              bold: true
              alignment_horizontal: "center"
              border: "thin"
            
            # Section 2: Trend Headers
            "F3:I3":
              background_color: "forestgreen"
              text_color: "white"
              bold: true
              font_size: 12
              alignment_horizontal: "center"
              border: "thick"
            
            # Section 2: Trend Data
            "F4:I15":
              background_color: "honeydew"
              text_color: "darkgreen"
              alignment_horizontal: "right"
              border: "hair"
            
            # Section 3: Alerts
            "A10:D15":
              background_color: "mistyrose"
              text_color: "darkred"
              border:
                all:
                  style: "dashed"
                  color: "red"
            
            # Footer
            "A17:I17":
              background_color: "darkgray"
              text_color: "white"
              italic: true
              alignment_horizontal: "center"

backward_compatibility_example:
  description: "Show that all previous Phase 1 & 2 features still work"
  yaml: |
    settings:
      description: "Comprehensive example using all three phases"

    recipe:
      - step_description: "Use all formatting features together"
        processor_type: "format_excel"
        target_file: "reports/comprehensive.xlsx"
        formatting:
          # Phase 1: Header enhancements (still work perfectly)
          header_text_color: "white"
          header_font_size: 16
          header_bold: true
          header_background: true
          header_background_color: "midnightblue"

          # Phase 2: General formatting (still work perfectly)
          general_text_color: "rgb(64, 64, 64)"    # Dark gray in RGB
          general_font_size: 11
          general_font_name: "Calibri"
          general_alignment_horizontal: "left"
          general_alignment_vertical: "center"

          # Phase 3: Cell range targeting (new!)
          cell_ranges:
            "A1:Z1":                          # Override header with range
              background_color: "darkred"     # Different from header_background_color
              text_color: "yellow"            # Different from header_text_color
              font_size: 18                   # Different from header_font_size
            
            "B2:B100":                        # Special column
              text_color: "blue"
              bold: true
              background_color: "lightcyan"
              border: "medium"

          # Classic features (still work)
          auto_fit_columns: true
          freeze_top_row: true
          auto_filter: true
          max_column_width: 50

# Add these examples to the format_excel_examples.yaml file

mixed_style_dashboard_example:
  description: "Professional dashboard using mixed YAML/JSON syntax (recommended style)"
  yaml: |
    settings:
      description: "Create executive dashboard with clean mixed syntax"

    recipe:
      - step_description: "Format dashboard with mixed YAML/JSON syntax"
        processor_type: "format_excel"
        target_file: "reports/executive_dashboard.xlsx"
        formatting:
          # YAML syntax for simple configuration
          header_text_color: "white"
          header_font_size: 16
          header_bold: true
          header_background_color: "darkslateblue"
          
          general_font_size: 10
          general_alignment_vertical: "center"
          auto_fit_columns: true
          freeze_top_row: true
          auto_filter: true
          
          # JSON syntax for complex cell ranges (much more readable!)
          cell_ranges: {
            "A1:F1": {"background_color": "midnightblue", "text_color": "white", "font_size": 14, "bold": true},
            "A2:A20": {"text_color": "darkslategray", "bold": true, "alignment_horizontal": "right", "background_color": "lightgray"},
            "B2:D20": {"alignment_horizontal": "center", "border": "thin"},
            "E2:F20": {"text_color": "darkgreen", "font_name": "Consolas", "alignment_horizontal": "right"},
            "A21:F21": {"background_color": "lightsteelblue", "text_color": "darkblue", "bold": true, "border": {"all": "thick"}},
            "G1:G21": {"background_color": "aliceblue", "border": {"left": {"style": "thick", "color": "steelblue"}}}
          }

mixed_style_financial_report_example:
  description: "Financial report with mixed syntax showing various range types"
  yaml: |
    settings:
      description: "Quarterly financial report with professional formatting"

    recipe:
      - step_description: "Format quarterly financial report"
        processor_type: "format_excel"
        target_file: "reports/q3_financial.xlsx"
        formatting:
          # Simple YAML configuration
          header_text_color: "white"
          header_background_color: "navy"
          header_font_size: 12
          header_bold: true
          
          general_text_color: "rgb(51, 51, 51)"
          general_font_size: 10
          auto_fit_columns: true
          freeze_top_row: true
          
          # Complex JSON configuration for readability
          cell_ranges: {
            "A1": {"text_color": "white", "background_color": "darkred", "font_size": 18, "bold": true},
            "B1:F1": {"text_color": "white", "background_color": "darkblue", "font_size": 14, "bold": true},
            "A2:A50": {"text_color": "darkslategray", "bold": true, "alignment_horizontal": "right"},
            "B2:B50": {"text_color": "black", "alignment_horizontal": "left"},
            "C2:F50": {"text_color": "darkgreen", "alignment_horizontal": "right", "font_name": "Calibri"},
            "A51:F51": {"background_color": "lightblue", "bold": true, "border": {"top": "thick", "bottom": "thick"}},
            "G2:G51": {"background_color": "lightyellow", "border": {"left": "medium", "right": "medium"}}
          }

mixed_style_simple_example:
  description: "Simple report showing basic mixed syntax usage"
  yaml: |
    settings:
      description: "Clean and simple mixed syntax example"

    recipe:
      - step_description: "Format simple report with mixed syntax"
        processor_type: "format_excel"
        target_file: "reports/simple_report.xlsx"
        formatting:
          # Traditional YAML for basic settings
          header_bold: true
          header_background: true
          header_background_color: "steelblue"
          header_text_color: "white"
          auto_fit_columns: true
          
          # Clean JSON for cell ranges
          cell_ranges: {
            "A1:D1": {"font_size": 14, "bold": true},
            "A2:A10": {"bold": true, "text_color": "darkblue"},
            "B2:D10": {"alignment_horizontal": "center"},
            "A11:D11": {"background_color": "lightgray", "bold": true}
          }

mixed_style_complex_borders_example:
  description: "Advanced border formatting using mixed syntax"
  yaml: |
    settings:
      description: "Professional report with sophisticated border formatting"

    recipe:
      - step_description: "Apply complex border formatting with mixed syntax"
        processor_type: "format_excel"
        target_file: "reports/bordered_report.xlsx"
        formatting:
          # YAML for straightforward configuration
          header_text_color: "white"
          header_font_size: 14
          header_bold: true
          header_background_color: "darkslateblue"
          
          general_font_size: 10
          general_alignment_horizontal: "left"
          auto_fit_columns: true
          
          # JSON for complex border specifications (much cleaner!)
          cell_ranges: {
            "A1:F1": {
              "border": {"all": "thick", "bottom": "double"}
            },
            "A2:F20": {
              "border": "thin"
            },
            "A21:F21": {
              "background_color": "lightsteelblue",
              "text_color": "darkblue",
              "bold": true,
              "border": {
                "top": {"style": "thick", "color": "darkblue"},
                "bottom": {"style": "thick", "color": "darkblue"},
                "left": "medium",
                "right": "medium"
              }
            },
            "G1:G21": {
              "background_color": "aliceblue",
              "border": {
                "left": {"style": "thick", "color": "steelblue"},
                "right": "thin"
              }
            }
          }

syntax_style_comparison:
  description: "Comparison showing why mixed syntax is recommended"
  note: |
    The mixed YAML/JSON style is recommended because:
    
    1. YAML syntax for simple, top-level configuration:
       - More readable for basic key-value pairs
       - Better for comments and documentation
       - Cleaner for boolean and numeric values
    
    2. JSON syntax for complex nested structures:
       - Much more compact for cell_ranges
       - Easier to copy/paste and edit
       - Better visual separation of ranges
       - Reduces indentation complexity
    
    Example comparison:
    
    YAML Style (verbose):
      cell_ranges:
        A1:C10:
          text_color: white
          background_color: navy
          bold: true
    
    JSON Style (compact):
      cell_ranges: {
        "A1:C10": {"text_color": "white", "background_color": "navy", "bold": true}
      }
    
    The JSON style for cell_ranges is especially beneficial when you have
    many ranges with multiple properties each.

parameter_details:
  # Phase 3 Enhancements
  cell_ranges:
    type: object
    required: false
    default: {}
    description: "Target specific cell ranges with custom formatting"
    structure: "Range specification (string) → formatting options (dict)"
    examples:
      - range_format: |
          cell_ranges:
            "A1:C10":                         # Range specification
              text_color: "white"             # Font color
              background_color: "navy"        # Cell background
              font_size: 12                   # Font size in points
              font_name: "Arial"              # Font family
              bold: true                      # Bold text
              italic: false                   # Italic text
              alignment_horizontal: "center"  # Horizontal alignment
              alignment_vertical: "middle"    # Vertical alignment
              border: "thin"                  # Simple border
            
            "D1":                             # Single cell
              text_color: "red"
              bold: true
            
            "E1:E20":                         # Column range
              background_color: "lightgray"
              border:                         # Complex border
                top: "thick"
                bottom: "thin"
                left: "medium"
                right: "medium"

    range_specifications:
      single_cell: "B2, C5, AA10"
      cell_range: "A1:C10, B2:D5, AA1:AB20"
      column_range: "A:A, B:C, AA:AB"
      row_range: "1:1, 2:5, 10:20"

    formatting_options:
      text_color: "Color in any supported format"
      background_color: "Background fill color"
      font_size: "Font size in points (number)"
      font_name: "Font family name (string)"
      bold: "Bold text (boolean)"
      italic: "Italic text (boolean)"
      alignment_horizontal: "left, center, right, justify, etc."
      alignment_vertical: "top, center, bottom, justify, distributed"
      border: "Border specification (string or dict)"

  color_format_support:
    description: "Phase 3 enhanced color format support with webcolors integration"
    supported_formats:
      hex_with_hash: "#FF0000, #00FF00, #0000FF"
      hex_without_hash: "FF0000, 00FF00, 0000FF"
      short_hex: "#F00, #0F0, #00F"
      css_color_names: "red, blue, green, white, black, navy, forestgreen, steelblue"
      rgb_format: "rgb(255, 0, 0), rgb(0, 255, 0), rgb(0, 0, 255)"
    
    fallback: "If webcolors unavailable, falls back to basic hex parsing"
    validation: "Comprehensive validation with helpful error messages"

  border_formatting:
    description: "Professional border formatting for cells and ranges"
    simple_format: "Border style name (string)"
    simple_styles: ["thin", "thick", "medium", "dashed", "dotted", "double", "hair"]
    
    complex_format: "Detailed border specification (dict)"
    complex_example: |
      border:
        all: "thick"                    # Apply to all sides
        top: "medium"                   # Override top
        left:                           # Detailed side spec
          style: "dashed"
          color: "red"
    
    sides: ["top", "bottom", "left", "right", "all"]
