# diff_data Processor Specification
# Compares two datasets and identifies new, changed, unchanged, and deleted rows

processor_type: "diff_data"

# Basic Configuration Example:
basic_example:
  yaml: |
    - step_description: "Compare current data against baseline to identify all changes"
      processor_type: "diff_data"
      # REQ - Stage containing updated/current data 
      source_stage: "stg_current_data_standardized_and_keyed"
      # REQ - Stage containing baseline/reference data for comparison
      reference_stage: "stg_baseline_data_standardized_and_keyed"
      # REQ - Column(s) used to match rows between datasets
      key_columns: ["composite_key"]
      # REQ - Main output stage with all data plus change metadata
      save_to_stage: "stg_diff_complete_analysis_with_metadata"
      # OPT - Columns to exclude from change detection
      # Default value: [] (compare all columns)
      exclude_columns: ["composite_key", "last_modified_timestamp"]

# Advanced Configuration with Multiple Output Stages:
advanced_example:
  yaml: |
    - step_description: "Comprehensive diff analysis with separated outputs"
      processor_type: "diff_data"
      source_stage: "stg_current_data_ready_for_comparison"
      reference_stage: "stg_baseline_data_ready_for_comparison"
      key_columns: ["composite_key"]
      save_to_stage: "stg_diff_complete_analysis_with_metadata"
      exclude_columns: ["composite_key", "created_date", "internal_id"]
      # OPT - Generate separate convenience stages for each change type
      # Default value: false (only create main stage)
      create_filtered_stages: true
      # OPT - Stage naming pattern for filtered outputs
      # Default pattern: "stg_diff_{change_type}_rows_subset"
      filtered_stage_prefix: "stg_diff_analysis"
      # OPT - Include JSON format of change details
      # Default value: false (only pipe-separated format)
      include_json_details: true
      # OPT - How to handle rows that exist in baseline but not in current
      # Default value: "include" | Options: "include", "exclude", "separate_stage"  
      handle_deleted_rows: "include"

# Metadata Columns Added to Output:
metadata_columns:
  Row_Status:
    type: string
    values: ["NEW", "CHANGED", "UNCHANGED", "DELETED"]
    description: "Indicates the type of change detected for this row"
    
  Changed_Fields:
    type: string  
    format: "comma-separated list"
    example: "Total Price, Status, Customer Name"
    description: "List of field names that have different values"
    
  Change_Count:
    type: integer
    description: "Number of fields that changed between baseline and current"
    
  Change_Details:
    type: string
    format: "pipe-separated with single quotes"
    example: "Total Price: '1000.00'→'1200.00' | Status: 'Pending'→'Shipped' | Customer: 'ABC Corp'→'XYZ Ltd'"
    description: "Detailed before/after values for all changed fields"
    
  Change_Details_JSON:
    type: string
    format: "JSON object (optional)"
    example: '{"Total Price": {"old": "1000.00", "new": "1200.00"}, "Status": {"old": "Pending", "new": "Shipped"}}'
    description: "Machine-readable format of change details (when include_json_details: true)"
    condition: "Only included when include_json_details parameter is true"

# Generated Filtered Stages (when create_filtered_stages: true):
filtered_stages:
  new_rows:
    stage_name: "stg_diff_analysis_new_rows_subset" 
    description: "Rows that exist in current data but not in baseline"
    filter_criteria: "Row_Status = 'NEW'"
    
  changed_rows:
    stage_name: "stg_diff_analysis_changed_rows_subset"
    description: "Rows that exist in both datasets but have different values"
    filter_criteria: "Row_Status = 'CHANGED'"
    
  unchanged_rows:
    stage_name: "stg_diff_analysis_unchanged_rows_subset" 
    description: "Rows that exist in both datasets with identical values"
    filter_criteria: "Row_Status = 'UNCHANGED'"
    
  deleted_rows:
    stage_name: "stg_diff_analysis_deleted_rows_subset"
    description: "Rows that exist in baseline but not in current data"
    filter_criteria: "Row_Status = 'DELETED'"
    condition: "Only created when handle_deleted_rows is 'include' or 'separate_stage'"

# Usage in Your Recipe:
recipe_integration:
  before_diff:
    description: "Steps before diff analysis remain the same"
    steps: [
      "Import and standardize both datasets",
      "Apply filtering rules", 
      "Create composite keys"
    ]
    
  diff_step:
    yaml: |
      - step_description: "Analyze differences between baseline and current datasets"
        processor_type: "diff_data"
        source_stage: "stg_current_data_standardized_filtered_and_keyed"
        reference_stage: "stg_baseline_data_standardized_filtered_and_keyed" 
        key_columns: ["composite_key"]
        save_to_stage: "stg_diff_complete_comparison_analysis_with_metadata"
        exclude_columns: ["composite_key"]
        create_filtered_stages: true
        filtered_stage_prefix: "stg_diff_breakdown"
        include_json_details: false
        
  export_step:
    yaml: |
      - step_description: "Export comprehensive diff analysis to Excel workbook"
        processor_type: "export_file"
        source_stage: "stg_diff_complete_comparison_analysis_with_metadata"
        output_file: "{output_file}"
        create_backup: true
        sheets:
          - sheet_name: "Complete Analysis"
            data_source: "stg_diff_complete_comparison_analysis_with_metadata"
          - sheet_name: "New Rows Only"
            data_source: "stg_diff_breakdown_new_rows_subset"
          - sheet_name: "Changed Rows Only" 
            data_source: "stg_diff_breakdown_changed_rows_subset"
          - sheet_name: "Baseline Reference"
            data_source: "stg_baseline_data_standardized_filtered_and_keyed"
          - sheet_name: "Current Reference"
            data_source: "stg_current_data_standardized_filtered_and_keyed"

# Stage Naming Convention Recommendations:
stage_naming_patterns:
  prefix: "stg_"
  structure: "stg_{data_source}_{processing_step}_{additional_context}"
  examples:
    good: [
      "stg_baseline_data_imported_raw_from_excel",
      "stg_current_data_standardized_columns_with_template", 
      "stg_baseline_data_filtered_excluding_completed_workflows",
      "stg_diff_complete_analysis_with_change_metadata",
      "stg_diff_detected_new_rows_subset_for_review"
    ]
    avoid: [
      "baseline_raw",      # Missing stage prefix
      "stg_data",          # Too generic
      "stg_results",       # Unclear what kind of results
      "diff_output"        # Missing stage prefix, unclear content
    ]
    
  autocomplete_benefits:
    - "Typing 'stg_' shows ONLY stage names, nothing else"
    - "Typing 'stg_diff_' shows only diff-related stages"
    - "Typing 'stg_baseline_' shows baseline processing pipeline"
    - "Typing 'stg_current_' shows current data processing pipeline"

# Conditional Formatting Integration:
conditional_formatting_approach:
  row_level_formatting:
    description: "Apply different row colors based on Row_Status column"
    implementation: "External post-processing script or future conditional_formatting processor"
    color_scheme:
      NEW: "Light Green Background"
      CHANGED: "Light Yellow Background" 
      UNCHANGED: "No Special Formatting"
      DELETED: "Light Red Background"
      
  workflow:
    - "Export Excel file with diff metadata"
    - "Run conditional formatting script/processor"
    - "Script reads Row_Status column and applies row-level formatting"
    - "User can freeze panes on metadata columns for easy reference"
    
  freeze_panes_strategy:
    description: "Freeze first few columns (keys + metadata) so users can scroll right while keeping change info visible"
    recommended_freeze: "After Change_Details column (column E or F depending on key columns)"

