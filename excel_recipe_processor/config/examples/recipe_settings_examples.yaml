# Revision date: 2025-08-03

description: "Recipe settings section configuration options for stage-based architecture with variables, stage management, and error handling"

minimal_example:
  description: "Minimal required settings section - every recipe should have this"
  yaml: |
    # Minimal settings section - required for all recipes
    
    settings:
      description: "Process daily sales data for regional reporting"

recommended_example:
  description: "Recommended settings with commonly used features"
  yaml: |
    # Recommended settings with stage declarations and variables
    
    settings:
      description: "Process customer orders with data validation and regional analysis"
      
      # Custom variables for reuse throughout recipe
      variables:
        region: "west"
        min_order_amount: "500"
        output_prefix: "processed"
      
      # Stage declarations for auto-completion and protection
      stages:
        - stage_name: "raw_orders"
          description: "Raw order data from import"
          protected: false
        - stage_name: "validated_orders"
          description: "Orders passing validation rules"
          protected: false
        - stage_name: "regional_orders"
          description: "Orders filtered for specific region"
          protected: false

error_handling_example:
  description: "Settings with global error handling configuration"
  yaml: |
    # Settings with error handling options
    
    settings:
      description: "Process data with error tolerance and graceful degradation"
      
      # Global error handling - applies to all steps unless overridden
      # Options: halt (default), continue, log_and_continue, skip_remaining
      on_error: "log_and_continue"
      
      # Variables and stages
      variables:
        batch_id: "A47"
        region: "west"
      
      stages:
        - stage_name: "raw_data"
          description: "Raw input data"
          protected: false
        - stage_name: "processed_data"
          description: "Processed results"
          protected: false

advanced_example:
  description: "Advanced settings with external variables, stage protection, and error handling"
  yaml: |
    # Advanced settings with external variables and protected stages
    
    settings:
      description: "Batch processing with interactive variable prompting, data protection, and error handling"
      
      # Global error handling strategy
      on_error: "halt"  # Conservative approach for production
      
      # External variables for interactive prompting
      required_external_vars:
        batch_id:
          description: "Unique batch identifier for processing"
          validation: "^[A-Z]\\d+$"
          example: "A47, B23, C91"
          
        environment:
          description: "Processing environment"
          choices: ["development", "staging", "production"]
          default_value: "development"
          
        report_date:
          description: "Report generation date (YYYYMMDD)"
          default_value: "{date}"
          validation: "^\\d{8}$"
          example: "20250803"
      
      # Static variables
      variables:
        company_name: "TechCorp Inc"
        version: "v2.1"
        
      # Protected stages for critical data
      stages:
        - stage_name: "master_data"
          description: "Master reference data - DO NOT OVERWRITE"
          protected: true
        - stage_name: "raw_batch_data"
          description: "Raw batch data from import"
          protected: false
        - stage_name: "validated_data"
          description: "Data after validation and cleaning"
          protected: false
        - stage_name: "final_results"
          description: "Final processed results"
          protected: false

external_variables_example:
  description: "Comprehensive external variable configuration options"
  yaml: |
    # External variables with all configuration options
    
    settings:
      description: "Demonstrate all external variable features with error handling"
      
      # Error handling for external variable processing
      on_error: "log_and_continue"
      
      required_external_vars:
        # Required variable with validation
        batch_id:
          description: "Unique batch identifier for processing"
          validation: "^[A-Z]\\d+$"
          example: "A47, B23, C91"
          # No default_value means this is truly required
        
        # Variable with choices constraint
        environment:
          description: "Processing environment"
          choices: ["development", "staging", "production"]
          default_value: "development"
        
        # Variable with dynamic default
        report_date:
          description: "Report generation date"
          default_value: "{date}"  # Uses current date
          validation: "^\\d{8}$"
          example: "20250803"
        
        # Optional variable that can be empty
        notes:
          description: "Optional processing notes"
          default_value: ""
          allow_empty: true
          example: "Special handling required, Holiday processing"
        
        # Variable with complex validation
        email_list:
          description: "Comma-separated email addresses for notifications"
          validation: "^[\\w\\._%+-]+@[\\w\\.-]+\\.[A-Z]{2,}(,\\s*[\\w\\._%+-]+@[\\w\\.-]+\\.[A-Z]{2,})*$"
          default_value: "admin@company.com"
          example: "user1@company.com, user2@company.com"
      
      # Stage declarations
      stages:
        - stage_name: "batch_data"
          description: "Batch data for processing"
          protected: false

comprehensive_example:
  description: "Complete settings configuration showing all available options"
  yaml: |
    # Comprehensive settings with all available features
    
    settings:
      description: "Complete data processing pipeline with full configuration"
      
      # Error handling strategy - can be overridden per step
      on_error: "log_and_continue"
      
      # Custom variables for recipe logic
      variables:
        region: "west"
        min_order_amount: "500"
        output_prefix: "processed"
        company_code: "TECH"
        fiscal_year: "2025"
      
      # Interactive external variables
      required_external_vars:
        batch_date:
          description: "Processing batch date (YYYYMMDD format)"
          validation: "^\\d{8}$"
          default_value: "{date}"
          example: "20250803"
          
        department:
          description: "Department for processing"
          choices: ["SALES", "FINANCE", "HR", "OPERATIONS"]
          default_value: "SALES"
          
        output_format:
          description: "Output format preference"
          choices: ["excel", "csv", "both"]
          default_value: "excel"
          
        notification_email:
          description: "Email for completion notifications"
          validation: "^[\\w\\._%+-]+@[\\w\\.-]+\\.[A-Z]{2,}$"
          default_value: "admin@company.com"
          allow_empty: false
      
      # Stage management with protection
      stages:
        - stage_name: "master_customers"
          description: "Master customer database - protected"
          protected: true
          
        - stage_name: "raw_orders"
          description: "Raw order data from daily import"
          protected: false
          
        - stage_name: "validated_orders"
          description: "Orders after validation and cleaning"
          protected: false
          
        - stage_name: "enriched_orders" 
          description: "Orders with customer data merged"
          protected: false
          
        - stage_name: "regional_summary"
          description: "Regional analysis and summary data"
          protected: false
          
        - stage_name: "final_report"
          description: "Final formatted report data"
          protected: false
      
      # Global processing options
      create_backup: true
      encoding: "utf-8"

parameter_details:
  description:
    type: string
    required: true
    description: "Human-readable description of what this recipe does"
    purpose: "Documentation and team collaboration"
    examples: ["Process daily sales data", "Generate monthly customer reports"]
    
  on_error:
    type: string
    required: false
    default: "halt"
    description: "Global error handling strategy for all recipe steps (can be overridden per step)"
    options:
      halt: "Stop processing immediately when any error occurs (default behavior)"
      continue: "Log error and continue to next step"
      log_and_continue: "Log detailed error information and continue processing"
      skip_remaining: "Log error and skip all remaining steps (but don't raise exception)"
    examples: ["halt", "continue", "log_and_continue", "skip_remaining"]
    note: "Individual recipe steps can override this setting using their own on_error parameter"
    
  variables:
    type: object
    required: false
    description: "Custom variables for use throughout the recipe with variable substitution"
    use_cases: ["Repeated values", "Dynamic content", "Configuration parameters"]
    syntax: "Reference with {variable_name} in any string field"
    examples:
      basic: {"region": "west", "batch_id": "A47"}
      advanced: {"output_prefix": "processed", "min_amount": "1000", "company": "TechCorp"}
    
  required_external_vars:
    type: object
    required: false
    description: "Variables that will be collected interactively or from CLI arguments"
    benefits: ["CLI automation", "Interactive prompting", "Environment-specific values"]
    
    variable_config:
      description:
        type: string
        required: true
        description: "Human-readable description shown to user during prompting"
      
      validation:
        type: string
        required: false
        description: "Regular expression pattern for value validation"
        examples: ["^[A-Z]{2,}$", "^\\d{8}$", "^[\\w\\._%+-]+@[\\w\\.-]+\\.[A-Z]{2,}$"]
      
      choices:
        type: array
        required: false
        description: "List of valid choices (mutually exclusive with validation)"
        examples: [["west", "east", "central"], ["development", "staging", "production"]]
      
      default_value:
        type: string
        required: false
        description: "Default value (supports variable substitution)"
        examples: ["west", "{date}", "admin@company.com"]
      
      example:
        type: string
        required: false
        description: "Example value shown to user during prompting"
      
      allow_empty:
        type: boolean
        required: false
        default: true
        description: "Whether empty values are allowed"
  
  stages:
    type: array
    required: false
    description: "Stage declarations for auto-completion and protection"
    benefits: ["Auto-completion in editors", "Prevents accidental overwrites", "Workflow documentation"]
    
    stage_config:
      stage_name:
        type: string
        required: true
        description: "Unique name for the stage"
        naming_tips: ["Use descriptive names", "Consider stage lifecycle", "Be consistent across recipes"]
      
      description:
        type: string
        required: false
        description: "Human-readable description of stage contents"
        purpose: "Team collaboration and workflow documentation"
      
      protected:
        type: boolean
        required: false
        default: false
        description: "Whether stage is protected from accidental overwriting"
        use_cases: ["Master data", "Critical references", "Expensive computations"]

best_practices:
  settings_first: "Always place settings section before recipe section for discoverability"
  always_describe: "Include description in every recipe for team collaboration"
  declare_stages: "Declare stages for auto-completion and protection features"
  use_variables: "Use variables for repeated values and dynamic content"
  external_vars: "Use external variables for CLI automation and interactive prompting"
  protect_critical: "Mark critical stages as protected to prevent accidental overwrite"
  consistent_naming: "Use consistent naming conventions for stages across recipes"
  error_strategy: "Choose appropriate error handling strategy based on environment and criticality"
  step_overrides: "Use per-step on_error overrides for fine-grained error control"

error_handling_strategies:
  development: "Use 'log_and_continue' for detailed debugging information"
  staging: "Use 'continue' for resilient testing environments"
  production: "Use 'halt' (default) for fail-fast reliability"
  batch_processing: "Use 'skip_remaining' when current step failure makes remaining steps pointless"
  data_pipelines: "Mix strategies: 'halt' for critical steps, 'continue' for optional enrichment"

common_patterns:
  simple_processing: "description + basic variables + stage declarations"
  batch_automation: "description + external variables + stage protection"
  team_recipes: "description + comprehensive stage declarations + protection"
  development_recipes: "description + external variables + log_and_continue error handling"
  production_recipes: "description + protected stages + comprehensive validation + halt on errors"
  graceful_degradation: "description + continue/log_and_continue for non-critical steps"
