# Enhanced Format Excel Examples - Template Support Addition
# excel_recipe_processor/processors/_examples/format_excel_examples.yaml
#
# NEW: Template support for reusable formatting configurations
# Revision date: 2025-08-11

description: >
  Format existing Excel files with professional presentation features. 
  Enhanced with template support for reusable formatting configurations
  to reduce redundancy in multi-sheet workbooks.

# NEW: Basic template usage example
basic_template_example:
  description: "Use templates to reduce formatting configuration redundancy"
  yaml: |
    settings:
      description: "Multi-sheet report with consistent formatting using templates"
      stages:
        - stage_name: "stg_financial_data"
          description: "Quarterly financial data"
          protected: false
        - stage_name: "stg_sales_data"
          description: "Sales performance data"
          protected: false

    recipe:
      - step_description: "Import financial data"
        processor_type: "import_file"
        input_file: "data/q3_financial.xlsx"
        save_to_stage: "stg_financial_data"

      - step_description: "Import sales data"
        processor_type: "import_file"
        input_file: "data/q3_sales.xlsx"
        save_to_stage: "stg_sales_data"

      - step_description: "Export combined workbook"
        processor_type: "export_file"
        source_stage: "stg_financial_data"
        output_file: "reports/q3_executive_report.xlsx"
        sheet_name: "Financial Summary"

      - step_description: "Add sales data to second sheet"
        processor_type: "export_file"
        source_stage: "stg_sales_data"
        output_file: "reports/q3_executive_report.xlsx"
        sheet_name: "Sales Performance"
        mode: "append"

      - # NEW: Template-based formatting step
        step_description: "Apply consistent formatting using templates"
        processor_type: "format_excel"
        target_file: "reports/q3_executive_report.xlsx"
        
        # Define reusable templates
        templates:
          - template_name: "corporate_header_style"
            header_background: true
            header_background_color: "2F5597"   # Executive blue
            header_text_color: "white"
            header_font_size: 14
            header_bold: true
            header_alignment_vertical: "center"
            freeze_top_row: true
            auto_filter: true

          - template_name: "standard_sizing"
            auto_fit_columns: true
            max_column_width: 100
            min_column_width: 12
            row_heights: {1: 25}

          - template_name: "financial_data_style"
            general_font_name: "Calibri"
            general_font_size: 10
            general_alignment_horizontal: "right"

        # Apply templates to sheets
        formatting:
          - sheet: "Financial Summary"
            apply_templates: ["corporate_header_style", "standard_sizing", "financial_data_style"]

          - sheet: "Sales Performance"
            apply_templates: ["corporate_header_style", "standard_sizing"]
            # Override template for sales data alignment
            general_alignment_horizontal: "left"

# Advanced template composition example
advanced_template_example:
  description: "Complex template composition with overrides and multiple template application"
  yaml: |
    settings:
      description: "Comprehensive dashboard with multiple formatting templates"

    recipe:
      - step_description: "Create multi-sheet dashboard with advanced template composition"
        processor_type: "format_excel"
        target_file: "reports/executive_dashboard.xlsx"
        
        # Multiple templates for different purposes
        templates:
          - template_name: "base_professional"
            header_bold: true
            header_background: true
            header_alignment_vertical: "center"
            auto_fit_columns: true
            freeze_top_row: true
            general_font_name: "Calibri"
            general_font_size: 10

          - template_name: "executive_branding"
            header_background_color: "darkslateblue"
            header_text_color: "white"
            header_font_size: 16
            max_column_width: 50
            min_column_width: 15

          - template_name: "financial_precision"
            general_alignment_horizontal: "right"
            general_font_name: "Consolas"
            row_heights: {1: 30}

          - template_name: "summary_highlights"
            auto_filter: true
            cell_ranges: {
              "A1:Z1": {"background_color": "midnightblue", "text_color": "white", "font_size": 14},
              "A2:A100": {"background_color": "lightgray", "text_color": "darkslategray", "bold": true}
            }

          - template_name: "data_visualization_ready"
            general_alignment_vertical: "center"
            cell_ranges: {
              "A:A": {"alignment_horizontal": "left", "bold": true},
              "B:Z": {"alignment_horizontal": "center"}
            }

        formatting:
          # Executive summary with full branding
          - sheet: 1
            apply_templates: ["base_professional", "executive_branding", "summary_highlights"]

          # Financial details with precision formatting
          - sheet: 2
            apply_templates: ["base_professional", "executive_branding", "financial_precision"]

          # Data visualization sheet
          - sheet: 3
            apply_templates: ["base_professional", "data_visualization_ready"]
            # Override header color for this sheet
            header_background_color: "forestgreen"

          # Raw data sheet with minimal formatting
          - sheet: 4
            apply_templates: ["base_professional"]
            # Completely override header styling for raw data
            header_background_color: "lightgray"
            header_text_color: "black"
            header_font_size: 11

# Template reuse across steps example
template_reuse_example:
  description: "Reusing templates across multiple format_excel steps in the same recipe"
  yaml: |
    settings:
      description: "Multi-step report generation with consistent template reuse"

    recipe:
      # First formatting step - main reports
      - step_description: "Format main reports with standard templates"
        processor_type: "format_excel"
        target_file: "reports/main_report.xlsx"
        
        templates:
          - template_name: "company_standard"
            header_background: true
            header_background_color: "2F5597"
            header_text_color: "white"
            header_font_size: 14
            header_bold: true
            auto_fit_columns: true
            freeze_top_row: true
            max_column_width: 80
            min_column_width: 10

          - template_name: "data_presentation"
            general_font_size: 10
            general_alignment_vertical: "center"
            auto_filter: true

        formatting:
          - sheet: 1
            apply_templates: ["company_standard", "data_presentation"]
          - sheet: 2
            apply_templates: ["company_standard", "data_presentation"]

      # Second formatting step - appendix with same templates
      - step_description: "Format appendix using same template standards"
        processor_type: "format_excel"
        target_file: "reports/appendix.xlsx"
        
        # Reuse the same template definitions (copy-paste friendly)
        templates:
          - template_name: "company_standard"
            header_background: true
            header_background_color: "2F5597"
            header_text_color: "white"
            header_font_size: 14
            header_bold: true
            auto_fit_columns: true
            freeze_top_row: true
            max_column_width: 80
            min_column_width: 10

          - template_name: "appendix_style"
            general_font_size: 9
            general_text_color: "darkgray"
            header_font_size: 12

        formatting:
          - sheet: 1
            apply_templates: ["company_standard", "appendix_style"]

# Migration example - before and after templates
migration_example:
  description: "Before and after comparison showing template migration benefits"
  note: |
    BEFORE: Repetitive configuration (hard to maintain)
    
    formatting:
      - sheet: 1
        freeze_top_row: true
        header_background_color: "2F5597"
        header_background: true
        header_text_color: "white"
        header_font_size: 14
        header_bold: true
        header_alignment_vertical: "center"
        max_column_width: 100
        min_column_width: 12
        auto_filter: true
        auto_fit_columns: true
      
      - sheet: 2
        freeze_top_row: true
        header_background_color: "2F5597"
        header_background: true
        header_text_color: "white"
        header_font_size: 14
        header_bold: true
        header_alignment_vertical: "center"
        max_column_width: 100
        min_column_width: 12
        auto_filter: true
        auto_fit_columns: true
      
      - sheet: 3
        freeze_top_row: true
        header_background_color: "2F5597"
        header_background: true
        header_text_color: "white"
        header_font_size: 14
        header_bold: true
        header_alignment_vertical: "center"
        max_column_width: 100
        min_column_width: 12
        auto_filter: true
        auto_fit_columns: true

    AFTER: Clean template-based configuration (easy to maintain)
  yaml: |
    settings:
      description: "Clean template-based formatting configuration"

    recipe:
      - step_description: "Apply formatting with templates (much cleaner!)"
        processor_type: "format_excel"
        target_file: "reports/clean_formatted_report.xlsx"
        
        templates:
          - template_name: "standard_professional"
            freeze_top_row: true
            header_background_color: "2F5597"
            header_background: true
            header_text_color: "white"
            header_font_size: 14
            header_bold: true
            header_alignment_vertical: "center"
            max_column_width: 100
            min_column_width: 12
            auto_filter: true
            auto_fit_columns: true

        formatting:
          - sheet: 1
            apply_templates: ["standard_professional"]
          - sheet: 2
            apply_templates: ["standard_professional"]
          - sheet: 3
            apply_templates: ["standard_professional"]

# Complex override example
complex_override_example:
  description: "Complex template overrides and multiple template conflicts"
  yaml: |
    settings:
      description: "Demonstrate template precedence and override behavior"

    recipe:
      - step_description: "Complex template composition with precedence rules"
        processor_type: "format_excel"
        target_file: "reports/precedence_demo.xlsx"
        
        templates:
          - template_name: "base_style"
            header_background_color: "blue"
            header_text_color: "white"
            header_font_size: 12
            auto_fit_columns: true

          - template_name: "enhanced_style"
            header_background_color: "darkgreen"  # This will override "blue"
            header_font_size: 14                   # This will override 12
            freeze_top_row: true                   # This adds new functionality

          - template_name: "premium_style"
            header_background_color: "gold"       # This will override "darkgreen"
            header_text_color: "black"            # This will override "white"
            max_column_width: 50                   # This adds column width limits

        formatting:
          - sheet: 1
            # Apply templates in order: base_style, then enhanced_style, then premium_style
            # Final result: gold background, black text, font size 14, frozen row, auto-fit, max width 50
            apply_templates: ["base_style", "enhanced_style", "premium_style"]

          - sheet: 2
            # Template + direct overrides
            apply_templates: ["base_style", "enhanced_style"]
            # Direct rules override template rules
            header_background_color: "red"        # This overrides template's "darkgreen"
            freeze_top_row: false                 # This overrides template's true

# Error handling and validation example
validation_example:
  description: "Template validation and error handling scenarios"
  yaml: |
    settings:
      description: "Demonstrate template validation and missing template handling"

    recipe:
      - step_description: "Template validation scenarios"
        processor_type: "format_excel"
        target_file: "reports/validation_demo.xlsx"
        
        templates:
          - template_name: "valid_template"
            header_background: true
            header_background_color: "navy"
            auto_fit_columns: true

          # This template has a validation error
          - template_name: "invalid_template"
            header_font_size: -5              # Invalid: negative font size
            header_background_color: "notacolor"  # Invalid: unrecognized color

        formatting:
          - sheet: 1
            apply_templates: ["valid_template"]

          - sheet: 2
            # Reference to non-existent template (will be warned and skipped)
            apply_templates: ["valid_template", "missing_template"]
            header_bold: true  # This will still be applied

          - sheet: 3
            # Mix of valid and invalid templates
            apply_templates: ["valid_template", "invalid_template"]

template_best_practices:
  description: "Best practices for using templates effectively"
  note: |
    TEMPLATE BEST PRACTICES:
    
    1. Template Naming:
       - Use descriptive names: "corporate_header_style" not "template1"
       - Use consistent naming patterns: "base_", "enhanced_", "specialized_"
       - Avoid spaces or special characters in template names
    
    2. Template Composition:
       - Create layered templates: base → enhanced → specialized
       - Keep templates focused: separate layout, colors, and data formatting
       - Make templates reusable across different sheet types
    
    3. Template Precedence:
       - Later templates in the list override earlier ones
       - Direct sheet rules always override template rules
       - Use this for progressive enhancement patterns
    
    4. Template Organization:
       - Keep frequently-used templates at the top
       - Group related templates together
       - Document template purposes with good naming
    
    5. Maintenance:
       - Templates are easy to copy between recipes
       - Update templates to change multiple sheets at once
       - Validate templates independently before applying

# End of file #
